@page
@model TorneosWeb.Pages.JugadorModel
@using TorneosWeb.util
@{
	ViewData[ "Listado" ] = "Torneos";
}
@using Humanizer;

<!DOCTYPE html>

<html>

<head>
	<link rel="stylesheet" type="text/css" href="~/css/site.css" />
	<link rel="stylesheet" type="text/css" href="~/charts_js/Chart.css" />
	<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
	<meta name="viewport" content="width=device-width" />
	<title>Jugador</title>
</head>

<body>
	<div style="display:inline-flex; vertical-align:bottom">
		<p><h1>@Model.DetalleJugador.Nombre</h1><h1 style="margin-left:35px;color:@(Model.DetalleJugador.ProfitNumber < 0 ? "red" : "black")">@Model.DetalleJugador.Profit</h1></p>
	</div>

	<p style="height:20px" />

	<div style="display:inline-flex;flex-wrap:wrap">

		<div class="gridWrapper">
			<h3 style="grid-column: 1 / span 2">GENERAL</h3>

			<div class="statLabel">@Html.DisplayNameFor( model => model.DetalleJugador.Torneos ):</div>
			<div class="statValue">@Model.DetalleJugador.Torneos</div>

			<div class="statLabel">@Html.DisplayNameFor( model => model.DetalleJugador.Victorias ):</div>
			<div class="statValue">@Model.DetalleJugador.Victorias</div>

			<div class="statLabel">@Html.DisplayNameFor( model => model.DetalleJugador.Podios ):</div>
			<div class="statValue">@Model.DetalleJugador.Podios</div>

			<div class="statLabel">@Html.DisplayNameFor( model => model.DetalleJugador.Kos ):</div>
			<div class="statValue">@Model.DetalleJugador.Kos</div>

			<div class="statLabel">@Html.DisplayNameFor( model => model.DetalleJugador.Rebuys ):</div>
			<div class="statValue">@Model.DetalleJugador.Rebuys</div>

			<div class="statLabel">@Html.DisplayNameFor( model => model.DetalleJugador.Burbujas ):</div>
			<div class="statValue">@Model.DetalleJugador.Burbujas</div>

			<div class="statLabel">@Html.DisplayNameFor( model => model.DetalleJugador.UltimoLugar ):</div>
			<div class="statValue">@Model.DetalleJugador.UltimoLugar</div>

			<div class="statLabel">@Html.DisplayNameFor( model => model.DetalleJugador.PodiosNegativos ):</div>
			<div class="statValue">@Model.DetalleJugador.PodiosNegativos</div>
		</div>

		<p />

		<div class="gridWrapper">
			<h3 style="grid-column: 1 / span 2">PREMIOS</h3>

			<div class="statLabel">Premios Torneos:</div>
			<div class="statValue">@Model.DetalleJugador.Premios</div>

			<div class="statLabel">Premios Ligas:</div>
			<div class="statValue">@Model.DetalleJugador.PremiosLiga</div>

			<div class="statLabel">Costos Totales:</div>
			<div class="statValue" style="color:red">@Model.DetalleJugador.CostosTotales</div>

			<hr align="left" style="margin-top:1em;margin-bottom:1em;border: 2px solid black;grid-column: 1 / span 2;width:75%;background-color:black" />

			<div class="statLabel" style="font-weight:bold">@Html.DisplayNameFor( model => model.DetalleJugador.Profit ):</div>
			<div class="statValue" style="font-weight:bold;color:@(Model.DetalleJugador.ProfitNumber < 0 ? "red" : "black")">@Model.DetalleJugador.Profit</div>

			<div class="statLabel" style="font-weight:bold">@Html.DisplayNameFor( model => model.DetalleJugador.ROI ):</div>
			<div class="statValue" style="font-weight:bold;color:@(Model.DetalleJugador.ProfitNumber < 0 ? "red" : "black")">@Model.DetalleJugador.ROI</div>
		</div>

		<div class="gridWrapper" style="grid-auto-rows:min-content;grid-template-columns: 30px 150px;justify-content:flex-start">
			<h3 style="grid-column: 1 / span 2">PODIOS</h3>

			@foreach (int i in Model.Podios.Keys.OrderBy( k => k ))
			{
				<div class="statLabel">@i.Ordinalize():</div>
				<div class="statValue" style="text-align:left">@Model.Podios[i]</div>
			}
		</div>

		<div class="gridWrapper">
			<h3 style="grid-column: 1 / span 2">KO's</h3>

			@foreach (var ko in Model.DetalleJugador.Knockouts)
			{
				<div class="statLabel">@ko.Eliminado:</div>
				<div class="statValue">@ko.Eliminaciones</div>
			}
		</div>

	</div>

	<hr style="margin-top:3em;margin-bottom:3em;border: 3px solid black;background-color:black" />

	<h3>Torneos jugados</h3>

	<div style="overflow:auto;width:100%">
		<table id="table_detalle_jugador" class="table dataTable" style="width:100%">

			<thead>
				<tr>
					<th></th>
					<th>
						@Html.DisplayNameFor( model => model.Torneos[0].Fecha )
					</th>
					<th>
						@Html.DisplayNameFor( model => model.Torneos[0].Tipo )
					</th>
					<th>
						@Html.DisplayNameFor( model => model.Torneos[0].Ganador )
					</th>
					<th>
						@Html.DisplayNameFor( model => model.Torneos[0].Precio_Buyin )
					</th>
					<th style="text-align:center">
						@Html.DisplayNameFor( model => model.Torneos[0].Lugar )
					</th>
					<th>
						@Html.DisplayNameFor( model => model.Torneos[0].Profit )
					</th>
				</tr>
			</thead>

			<tbody>
				@foreach (var torneo in Model.Torneos)
				{
					<tr>
						<td>
							@Html.ActionLink( "Resultados", "TorneoResults", "Home", new { torneoId = torneo.Id, listado = "Torneos" } )
						</td>
						<td>
							@Html.DisplayFor( modelItem => torneo.Fecha )
						</td>
						<td>
							@Html.DisplayFor( modelItem => torneo.Tipo )
						</td>
						<td>
							<a asp-page="./Jugador" asp-route-id="@torneo.GanadorId">@Html.DisplayFor( modelItem => torneo.Ganador )</a>
						</td>
						<td>
							@Html.DisplayFor( modelItem => torneo.Precio_Buyin )
						</td>
						<td style="text-align:center">
							@Html.DisplayFor( modelItem => torneo.Lugar )
						</td>
						<td class="profit" style="text-align:right;margin-right:10em;color:@(torneo.ProfitNumber < 0 ? "red" : "black")">
							@Html.DisplayFor( modelItem => torneo.Profit )
						</td>
					</tr>
				}
			</tbody>

		</table>
	</div>

	<hr style="margin-top:3em;margin-bottom:3em;border: 3px solid black;background-color:black" />

	<div id="chartContainer"></div>

</body>

@section Scripts{
	<script>
		$(document).ready(function () {
			$('#table_detalle_jugador').DataTable({
				searching: false,
				ordering: false,
				lengthMenu: [10, 25, 50],
				pageLength: 25
			});
		});

		window.onload = function () {
			var chart = new CanvasJS.Chart("chartContainer", {
				theme: "light2",
				animationEnabled: true,
				title: {
					text: "PROFIT"
				},
				data: [
					{
						type: "line", //change type to bar, line, area, pie, etc
						color: "grey",
						markerColor: "green",
						dataPoints: @Html.Raw(Model.DataPoints)
					}
				]
			});

			setColor(chart);
			chart.render();

			function setColor(chart) {
				for (var i = 0; i < chart.options.data.length; i++) {
					dataSeries = chart.options.data[i];
					for (var j = 0; j < dataSeries.dataPoints.length; j++) {
						if (dataSeries.dataPoints[j].y <= 0) {
							dataSeries.dataPoints[j].markerColor = 'red';
							dataSeries.dataPoints[j].color = 'red';
						}
					}
				}
			}
		};
	</script>
}

</html>